<?php

use Drupal\node\NodeInterface;

/**
 * Implements hook_theme().
 *
 * Register the module-provided node template so Drupal knows it exists.
 */
function swislr_story_theme($existing, $type, $theme, $path) {
  return [
    'node__story' => [
      'base hook' => 'node',
      'template' => 'node--story',
      'path' => $path . '/templates',  
    ],
  ];
}

/**
 * Implements hook_theme_suggestions_node_alter().
 *
 * Add the node__story suggestion for Story bundle nodes.
 */
function swislr_story_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  $node = $variables['elements']['#node'] ?? null;
  if ($node instanceof NodeInterface && $node->bundle() === 'story') {
    $suggestions[] = 'node__story';
  }
}

/**
 * Implements hook_preprocess_node().
 *
 * Attach the Story CSS only for Story nodes in FULL view mode.
 */
function swislr_story_preprocess_node(array &$variables) {
  $node = $variables['node'] ?? null;
  if ($node instanceof NodeInterface && $node->bundle() === 'story' && ($variables['view_mode'] ?? '') === 'full') {
    $variables['#attached']['library'][] = 'swislr_story/story-node';
  }
}

