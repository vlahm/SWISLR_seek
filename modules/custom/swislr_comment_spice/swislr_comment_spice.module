<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;

function swislr_comment_spice_entity_view_alter(array &$build, EntityInterface $entity, $view_mode) {
  if ($entity->getEntityTypeId() !== 'node') {
    return;
  }

  // Detect any field of type 'comment' on this node.
  $has_comment_field = FALSE;
  foreach ($entity->getFieldDefinitions() as $name => $def) {
    if ($def->getType() === 'comment') {
      $has_comment_field = TRUE;
      break;
    }
  }

  if ($has_comment_field) {
    $build['#attached']['library'][] = 'swislr_comment_spice/ui';
    // Anchor so #comment-form scrolls to the thread.
    $build['swislr_comment_anchor'] = [
      '#markup' => '<a id="comment-form"></a>',
      '#weight' => -50,
    ];
  }
}

function swislr_comment_spice_theme_registry_alter(array &$registry) {
  $path = \Drupal::service('extension.path.resolver')
    ->getPath('module', 'swislr_comment_spice') . '/templates';

  // Per-field template for the default machine name 'comment'.
  if (isset($registry['field__comment'])) {
    $registry['field__comment']['path'] = $path;
    $registry['field__comment']['template'] = 'field--comment';
  }

  // Common alternate machine name: 'field_comments'.
  if (isset($registry['field__field_comments'])) {
    $registry['field__field_comments']['path'] = $path;
    $registry['field__field_comments']['template'] = 'field--field-comments';
  }

  // Keep your nice single-comment card too.
  if (isset($registry['comment'])) {
    $registry['comment']['path'] = $path;
    $registry['comment']['template'] = 'comment';
  }
}

